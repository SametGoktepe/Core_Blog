#pragma checksum "C:\Users\samet\Desktop\MVC\Core_Blog\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "911b13d012765ab8c389fa3aae115cff8c993ebb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\samet\Desktop\MVC\Core_Blog\Areas\Admin\Views\_ViewImports.cshtml"
using Core_Blog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\samet\Desktop\MVC\Core_Blog\Areas\Admin\Views\_ViewImports.cshtml"
using Core_Blog.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\samet\Desktop\MVC\Core_Blog\Areas\Admin\Views\_ViewImports.cshtml"
using Core_Blog.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"911b13d012765ab8c389fa3aae115cff8c993ebb", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"51a8475087d8f7ccc675f88a02216c5813fdd8b8", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\samet\Desktop\MVC\Core_Blog\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Index</h1>
<br />
<button type=""button"" id=""btngetlist"" class=""btn btn-danger"">Author List</button>
<br />
<br />
<div id=""writerlist"">
</div>
<br />
<button type=""button"" id=""btngetbyid"" class=""btn btn-success"">Author Get</button>
<br />
<div id=""writerget""></div>
<div>
    <input type=""text"" id=""writerid"" placeholder=""Author Id value"" class=""form-control-sm"" />
</div>
<br />
<button type=""button"" id=""btnadd"" class=""btn btn-info"">Author Add</button>
<br />
<div>
    <input type=""text"" id=""writerId"" class=""form-control-sm"" />
    <input type=""text"" id=""writerName"" class=""form-control-sm"" />
</div>
<br />
<div>
    <button type=""button"" id=""btndelete"" class=""btn btn-danger"">Author Delete</button>
    <br />
    <input type=""text"" id=""txtId"" class=""form-control-sm"" />
</div>
<br />
<button type=""button"" id=""btnupdate"" class=""btn btn-outline-danger"">Author Update</button>
<br />
<input type=""text"" id=""txtId1"" class=""form-control-sm"" placeholder=""Update Id"" />
<input type=""tex");
            WriteLiteral("t\" id=\"txtName1\" class=\"form-control-sm\" placeholder=\"Update name\" />\r\n\r\n\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btngetlist"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""Get"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let w = jQuery.parseJSON(func)
                    console.log(w);
                    let tablehtml = ""<table class=table table-bordered> <tr><th>ID</th> <th>Author Name</th></tr>"";
                    $.each(w, (index, value) => {
                        tablehtml += `<tr><td>${value.Id}</td> <td>${value.name}</td></tr>`
                    });
                    tablehtml += ""</table>""
                    $(""#writerlist"").html(tablehtml);
                }
            });
        });

        $(""#btngetbyid"").click(x => {
            let id = $(""#writerid"").val();
            $.ajax({
                contentType: ""appliaction/json"",
                dataType: ""json"",
              ");
                WriteLiteral(@"  type: ""Get"",
                url: ""/Admin/Writer/GetWriterByID/"",
                data: { writerid: id },
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(w);
                    let getValue = `<table class=table table-bordered> <tr><th>ID</th> <th>Author Name</th></tr> <tr><td>${w.Id}</td><td>${w.name}</td></tr></table>`;
                    $(""#writerget"").html(getValue);
                }
            })
        })

        $(""#btnadd"").click(function () {
            let writer = {
                Id: $(""#writerId"").val(),
                Name: $(""#writerName"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/AddWriter/"",
                data: writer,
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                    alert(""Job is success"");
                }
            })
        })

   ");
                WriteLiteral(@"     $(""#btndelete"").click(x => {
            let id = $(""#txtId"").val();
            $.ajax({
                url: ""/Admin/Writer/DeleteWriter/"" + id,
                type: ""post"",
                dataType: ""json"",
                success: function (func) {
                    loadData();
                }
            })
        })

        $(""#btnupdate"").click(function () {
            let writer = {
                Id: $(""#txtId1"").val(),
                name: $(""#txtName1"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data: writer,
                success: function (func) {
                    alert(""Update is Success"");
                }
            });
        })
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
